<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAAYdEVYdFNvZnR3YXJlAFBhaW50Lk5FVCB2My4zNqnn4iUA
        AAMvSURBVDhPJdP9T9NXFMfxb/oHGTUx8aFVFsRZEERAUJlAmOC21kFlFEQUpCC0hULlcUUQFSxUZ0kR
        aAvloYUyylAsIAgFKTAixjmTLSEuW977Um5yfruvnPM5uVcQxDO+Oip5835WNhkcp8JVjOpFBjnOq+S6
        fiCr7wpXn16m1F6Ib+1X5n73y2wzv0h2nTDxziMZDQxKrbNdlI3cwLrRjvufPnp2OmnfbqJppZIqfwn5
        Q9e41HaW+mED5slHUouvQyKsfgzIbPPPME7dxbczhPc/J8//ekTLRg01C2VoZ25T6rvB7fEc8lwKEu7L
        qbKLd1cnZMLi9hu0Y0VMfRnG86+drj9baVzRoxORZjKPIm8O6iEF2WKUwkEV2b0ZRBpP4JzrQ2ibMmEO
        Noc6Wj4/oD6g4+5vN0OdCkazUDkzyXyaTJPbiHt1CI2rIDR+ZlsKgtqhxPnlOda/H9OwoqN0Ko9bYyry
        R66Rbc8gw3KJGpeWjU9B3n0KoBkoIKU9Hnn1cREPK7HtPKF1sxbDaw0FA1khtFuZluQQ9G+8cixuzweM
        Hi3p5kSSH8YSXnkYIXdQwZOPJhqW9PStWbG87OC7rhS+7Uyi2lXByodlXm1NW4scuQtp5vNcaIvhQmu0
        iI8gKHvSaBBzVs2U4FrvZ+vzJg+9zRgGyplZn+6f3ZoZuTemZw9Gc/5+FPGm04RpD4mde5SUT9/kzoQa
        3UQxvk0v63+seXpfd6cNLTuLb9l/mk81J5C0C1siOdf0NTF14UTojiG0+1pRifkK3SquOzKpcBcxEfQE
        B5f6reoe5UJqxy48Q2IIntqDlUfJt2QjLG0vcvlBHApbKj++SOf77hTUvUpybQq+eXyOpNYoEprlxDae
        IlqE8uoTHNMcYHhhECHwYVn280gtZ+q+Il1c0hXLRVI64rgoLiaxZS9fbEME0bXhnDYc50jJPtSdWbjf
        DsuEPr9N0v3ymdQ0UkfMvZNE1YaFxos3yUN1tj6CyJowwsoPcfjOPvK7VOh7y6Q1dt3e5xCfmmT5/VvZ
        3KYfo1NPQl0URzX7kZYdRFp6AFnpQZIb43D4e/EueWS1TkMI/g+QRUsgkV5gDAAAAABJRU5ErkJggg==
</value>
  </data>
</root>